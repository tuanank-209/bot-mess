const axios = require('axios');
const fs = require('fs');

this.config = {
    name: "vd",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "DC-Nam (mod by Vtuancuto)",
    description: "gái",
    commandCategory: "Nhóm",
    usages: "",
    cooldowns: 0
};

global.anime = [];
global.girl = [];
global.trai = [];

this.stream_url = function (url) {
    return axios({
        url: url,
        responseType: 'stream',
    }).then(_ => _.data);
};

this.onLoad = async function (o) {
    let status1 = false;
    let status2 = false;
    let status3 = false;

    const jsonFilePath1 = './includes/listapi/api.json';
    const jsonFilePath2 = './includes/listapi/vdgai.json';
    const jsonFilePath3 = './includes/listapi/trai.json';

    const videoUrls1 = JSON.parse(fs.readFileSync(jsonFilePath1, 'utf-8'));
    const videoUrls2 = JSON.parse(fs.readFileSync(jsonFilePath2, 'utf-8'));
    const videoUrls3 = JSON.parse(fs.readFileSync(jsonFilePath3, 'utf-8'));

    if (!global.mmccffjjs1) global.mmccffjjs1 = setInterval(async () => {
        if (status1 == true || global.anime.length > 5) return;
        status1 = true;

        Promise.all([...Array(7)].map((_, index) => {
            const url = videoUrls1[Math.floor(Math.random() * videoUrls1.length)];
            return this.upload(url);
        })).then(res => {
            global.anime.push(...res);
            status1 = false;
        });
    }, 1000 * 5);

    if (!global.mmccffjjs2) global.mmccffjjs2 = setInterval(async () => {
        if (status2 == true || global.girl.length > 5) return;
        status2 = true;

        Promise.all([...Array(7)].map((_, index) => {
            const url = videoUrls2[Math.floor(Math.random() * videoUrls2.length)];
            return this.upload(url);
        })).then(res => {
            global.girl.push(...res);
            status2 = false;
        });
    }, 1000 * 5);

    if (!global.mmccffjjs3) global.mmccffjjs3 = setInterval(async () => {
        if (status3 == true || global.trai.length > 5) return;
        status3 = true;

        Promise.all([...Array(7)].map((_, index) => {
            const url = videoUrls3[Math.floor(Math.random() * videoUrls3.length)];
            return this.upload(url);
        })).then(res => {
            global.trai.push(...res);
            status3 = false;
        });
    }, 1000 * 5);

    this.upload = async function (url) {
        const form = {
            upload_1024: await this.stream_url(url),
        };

        return o.postFormData('https://upload.facebook.com/ajax/mercury/upload.php', form)
            .then(res => Object.entries(JSON.parse(res.body.replace('for (;;);', '')).payload?.metadata?.[0] || {})[0]);
    };
};

this.run = async function (o) {
    let send = msg => new Promise(r => o.api.sendMessage(msg, o.event.threadID, (err, res) => r(res || err), o.event.messageID));

    const command = o.args[0]

    if (command === 'anime') {
        send({
            body: 'Video Anime',
            attachment: global.anime.splice(0, 1),
        });
    } else if (command === 'gái') {
        send({
            body: 'Video Gái',
            attachment: global.girl.splice(0, 1),
        });
    } else if (command === 'trai') {
        send({
            body: 'Video Trai',
            attachment: global.trai.splice(0, 1),
        });
    } else {
        send({
            body: 'Vui lòng nhập "anime", "gái", hoặc "trai" để nhận video tương ứng.',
        });
    }
};

// const axios = require('axios');
// const fs = require('fs');

// this.config = {
//     name: "girl",
//     version: "1.0.0",
//     hasPermssion: 0,
//     credits: "DC-Nam (mod by Vtuancuto)",
//     description: "gái",
//     commandCategory: "Nhóm",
//     usages: "",
//     cooldowns: 0
// };

// global.anime = [];
// global.girl = [];

// this.stream_url = function (url) {
//     return axios({
//         url: url,
//         responseType: 'stream',
//     }).then(_ => _.data);
// };

// this.onLoad = async function (o) {
//     let status1 = false;
//     let status2 = false;

//     const jsonFilePath1 = './includes/listapi/api.json';
//     const jsonFilePath2 = './includes/listapi/vdgai.json';

//     const videoUrls1 = JSON.parse(fs.readFileSync(jsonFilePath1, 'utf-8'));
//     const videoUrls2 = JSON.parse(fs.readFileSync(jsonFilePath2, 'utf-8'));

//     if (!global.mmccffjjs1) global.mmccffjjs1 = setInterval(async () => {
//         if (status1 == true || global.anime.length > 5) return;
//         status1 = true;

//         Promise.all([...Array(7)].map((_, index) => {
//             const url = videoUrls1[Math.floor(Math.random() * videoUrls1.length)];
//             return this.upload(url);
//         })).then(res => {
//             global.anime.push(...res);
//             status1 = false;
//         });
//     }, 1000 * 5);

//     if (!global.mmccffjjs2) global.mmccffjjs2 = setInterval(async () => {
//         if (status2 == true || global.girl.length > 5) return;
//         status2 = true;

//         Promise.all([...Array(7)].map((_, index) => {
//             const url = videoUrls2[Math.floor(Math.random() * videoUrls2.length)];
//             return this.upload(url);
//         })).then(res => {
//             global.girl.push(...res);
//             status2 = false;
//         });
//     }, 1000 * 5);

//     this.upload = async function (url) {
//         const form = {
//             upload_1024: await this.stream_url(url),
//         };

//         return o.postFormData('https://upload.facebook.com/ajax/mercury/upload.php', form)
//             .then(res => Object.entries(JSON.parse(res.body.replace('for (;;);', '')).payload?.metadata?.[0] || {})[0]);
//     };
// };

// this.run = async function (o) {
//     let send = msg => new Promise(r => o.api.sendMessage(msg, o.event.threadID, (err, res) => r(res || err), o.event.messageID));

//     // send({
//     //     body: 'Video',
//     //     attachment: global.anime.splice(0, 1),
//     // });

//     send({
//         body: 'Video',
//         attachment:  global.girl.splice(0, 1),
//     });
// };


// const axios = require('axios');

// this.config = {
//     name: "girl",
//     version: "1.0.0",
//     hasPermssion: 0,
//     credits: "DC-Nam",
//     description: "gái ",
//     commandCategory: "Ảnh",
//     usages: "",
//     cooldowns: 0
// };
// global.queuesabc = [];
// this.stream_url= function (url) {
//     return axios({
//         url: url,
//         responseType: 'stream',
//     }).then(_ => _.data);
// },
// this.onLoad = async function (o) {
//         let status = false;
//         const api_url = 'https://duongkum999.tech/gai/';
//         const urls = ['https://ep.edu.vn/xem-hinh-hot-girl-de-thuong/imager_9_11850_700.jpg'];
//     if (!global.mmccffjjs) global.mmccffjjs = setInterval(_ => {
//             if (status == true || global.queuesabc.length > 5) return;
//             status = true;
//             Promise.all([...Array(5)].map(e => axios.get(api_url).then(r => this.upload(r.data.data)))).then(res => (global.queuesabc.push(...res), status = false));
//         },1000 * 5);
// this.upload = async function (url) {
//             const form = {
//                 upload_1024: await this.stream_url(url),
//             };

//             return o.postFormData('https://upload.facebook.com/ajax/mercury/upload.php',
//                 form).then(res => Object.entries(JSON.parse(res.body.replace('for (;;);', '')).payload?.metadata?.[0] || {})[0]);
//         };
//     },
// this.run = async function (o) {
//     // console.log(o)
//         let send = msg => new Promise(r => o.api.sendMessage(msg, o.event.threadID, (err, res) => r(res || err), o.event.messageID));

//         send({
//             body: 'Video',
//             attachment: global.queuesabc.splice(0, 1),
//         });
// }

